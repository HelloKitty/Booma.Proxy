using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using Booma;
namespace Booma
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class MapDataFormatObjectEntryContainer
    {
        public override Type SerializableType => typeof(MapDataFormatObjectEntryContainer);
        public override MapDatFormatTableEntryContainer Read(Span<byte> buffer, ref int offset)
        {
            MapDataFormatObjectEntryContainer_AutoGeneratedTemplateSerializerStrategy.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public override void Write(MapDatFormatTableEntryContainer value, Span<byte> buffer, ref int offset)
        {
            MapDataFormatObjectEntryContainer_AutoGeneratedTemplateSerializerStrategy.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="MapDataFormatObjectEntryContainer"/>
    /// </summary>
    public sealed partial class MapDataFormatObjectEntryContainer_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<MapDataFormatObjectEntryContainer_AutoGeneratedTemplateSerializerStrategy, MapDataFormatObjectEntryContainer>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(MapDataFormatObjectEntryContainer value, Span<byte> buffer, ref int offset)
        {
            //Type: MapDatFormatTableEntryContainer Field: 1 Name: Header Type: MapDatFormatTableEntryHeader;
            value.Header = MapDatFormatTableEntryHeader_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: MapDatFormatTableEntryContainer Field: 2 Name: EntryCount Type: Int32;
            //Type: MapDataFormatObjectEntryContainer Field: 1 Name: _Entries Type: MapDataFormatObjectEntry[];
            value._Entries = ComplexArrayTypeSerializerStrategy<MapDataFormatObjectEntry_AutoGeneratedTemplateSerializerStrategy, MapDataFormatObjectEntry>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(MapDataFormatObjectEntryContainer value, Span<byte> buffer, ref int offset)
        {
            //Type: MapDatFormatTableEntryContainer Field: 1 Name: Header Type: MapDatFormatTableEntryHeader;
            MapDatFormatTableEntryHeader_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.Header, buffer, ref offset);
            //Type: MapDatFormatTableEntryContainer Field: 2 Name: EntryCount Type: Int32;
            //Type: MapDataFormatObjectEntryContainer Field: 1 Name: _Entries Type: MapDataFormatObjectEntry[];
            ComplexArrayTypeSerializerStrategy<MapDataFormatObjectEntry_AutoGeneratedTemplateSerializerStrategy, MapDataFormatObjectEntry>.Instance.Write(value._Entries, buffer, ref offset);
        }
    }
}