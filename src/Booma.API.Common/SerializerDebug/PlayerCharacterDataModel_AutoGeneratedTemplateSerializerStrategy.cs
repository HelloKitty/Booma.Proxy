using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using Booma.Proxy;

namespace FreecraftCore.Serializer
{
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="PlayerCharacterDataModel"/>
    /// </summary>
    public sealed partial class PlayerCharacterDataModel_AutoGeneratedTemplateSerializerStrategy
            : BaseAutoGeneratedSerializerStrategy<PlayerCharacterDataModel_AutoGeneratedTemplateSerializerStrategy, PlayerCharacterDataModel>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(PlayerCharacterDataModel value, Span<byte> buffer, ref int offset)
        {
            //Type: PlayerCharacterDataModel Field: 1 Name: Progress Type: CharacterProgress;
            value.Progress = CharacterProgress_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 2 Name: GuildCard Type: String;
            value.GuildCard = FixedSizeStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, StaticTypedNumeric_Int32_16>.Instance.Read(buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 3 Name: unk3 Type: UInt64;
            value.unk3 = GenericTypePrimitiveSerializerStrategy<UInt64>.Instance.Read(buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 4 Name: Special Type: CharacterSpecialCustomInfo;
            value.Special = CharacterSpecialCustomInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 5 Name: SectionId Type: SectionId;
            value.SectionId = GenericPrimitiveEnumTypeSerializerStrategy<SectionId, Byte>.Instance.Read(buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 6 Name: ClassRace Type: CharacterClassRace;
            value.ClassRace = GenericPrimitiveEnumTypeSerializerStrategy<CharacterClassRace, Byte>.Instance.Read(buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 7 Name: VersionData Type: CharacterVersionData;
            value.VersionData = CharacterVersionData_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 8 Name: CustomizationInfo Type: CharacterCustomizationInfo;
            value.CustomizationInfo = CharacterCustomizationInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 9 Name: CharacterName Type: String;
            value.CharacterName = FixedSizeStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, StaticTypedNumeric_Int32_16>.Instance.Read(buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 10 Name: PlayedTime Type: UInt32;
            value.PlayedTime = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(PlayerCharacterDataModel value, Span<byte> buffer, ref int offset)
        {
            //Type: PlayerCharacterDataModel Field: 1 Name: Progress Type: CharacterProgress;
            CharacterProgress_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.Progress, buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 2 Name: GuildCard Type: String;
            FixedSizeStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, StaticTypedNumeric_Int32_16>.Instance.Write(value.GuildCard, buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 3 Name: unk3 Type: UInt64;
            GenericTypePrimitiveSerializerStrategy<UInt64>.Instance.Write(value.unk3, buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 4 Name: Special Type: CharacterSpecialCustomInfo;
            CharacterSpecialCustomInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.Special, buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 5 Name: SectionId Type: SectionId;
            GenericPrimitiveEnumTypeSerializerStrategy<SectionId, Byte>.Instance.Write(value.SectionId, buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 6 Name: ClassRace Type: CharacterClassRace;
            GenericPrimitiveEnumTypeSerializerStrategy<CharacterClassRace, Byte>.Instance.Write(value.ClassRace, buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 7 Name: VersionData Type: CharacterVersionData;
            CharacterVersionData_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.VersionData, buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 8 Name: CustomizationInfo Type: CharacterCustomizationInfo;
            CharacterCustomizationInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.CustomizationInfo, buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 9 Name: CharacterName Type: String;
            FixedSizeStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, StaticTypedNumeric_Int32_16>.Instance.Write(value.CharacterName, buffer, ref offset);
            //Type: PlayerCharacterDataModel Field: 10 Name: PlayedTime Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.PlayedTime, buffer, ref offset);
        }
        private sealed class StaticTypedNumeric_Int32_16 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 16; }
    }
}