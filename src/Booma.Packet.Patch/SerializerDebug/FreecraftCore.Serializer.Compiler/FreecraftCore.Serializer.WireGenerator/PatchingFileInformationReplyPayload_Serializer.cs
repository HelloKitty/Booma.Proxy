using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using Booma.Proxy;
namespace Booma.Proxy
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class PatchingFileInformationReplyPayload
    {
        public override Type SerializableType => typeof(PatchingFileInformationReplyPayload);
        public override PSOBBPatchPacketPayloadClient Read(Span<byte> buffer, ref int offset)
        {
            PatchingFileInformationReplyPayload_Serializer.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public override void Write(PSOBBPatchPacketPayloadClient value, Span<byte> buffer, ref int offset)
        {
            PatchingFileInformationReplyPayload_Serializer.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="PatchingFileInformationReplyPayload"/>
    /// </summary>
    public sealed partial class PatchingFileInformationReplyPayload_Serializer
            : BaseAutoGeneratedSerializerStrategy<PatchingFileInformationReplyPayload_Serializer, PatchingFileInformationReplyPayload>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(PatchingFileInformationReplyPayload value, Span<byte> buffer, ref int offset)
        {
            //Type: PSOBBPatchPacketPayloadClient Field: 1 Name: OperationCode Type: PatchNetworkOperationCode;
            value.OperationCode = GenericPrimitiveEnumTypeSerializerStrategy<PatchNetworkOperationCode, Int16>.Instance.Read(buffer, ref offset);
            //Type: PatchingFileInformationReplyPayload Field: 1 Name: PatchFileIndex Type: Int32;
            value.PatchFileIndex = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: PatchingFileInformationReplyPayload Field: 2 Name: PatchFileChecksum Type: UInt32;
            value.PatchFileChecksum = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: PatchingFileInformationReplyPayload Field: 3 Name: PatchFileSize Type: Int32;
            value.PatchFileSize = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(PatchingFileInformationReplyPayload value, Span<byte> buffer, ref int offset)
        {
            //Type: PSOBBPatchPacketPayloadClient Field: 1 Name: OperationCode Type: PatchNetworkOperationCode;
            GenericPrimitiveEnumTypeSerializerStrategy<PatchNetworkOperationCode, Int16>.Instance.Write(value.OperationCode, buffer, ref offset);
            //Type: PatchingFileInformationReplyPayload Field: 1 Name: PatchFileIndex Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.PatchFileIndex, buffer, ref offset);
            //Type: PatchingFileInformationReplyPayload Field: 2 Name: PatchFileChecksum Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.PatchFileChecksum, buffer, ref offset);
            //Type: PatchingFileInformationReplyPayload Field: 3 Name: PatchFileSize Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.PatchFileSize, buffer, ref offset);
        }
    }
}