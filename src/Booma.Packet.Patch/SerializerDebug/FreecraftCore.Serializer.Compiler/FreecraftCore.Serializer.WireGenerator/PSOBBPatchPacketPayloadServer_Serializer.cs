using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using Booma.Proxy;
namespace Booma.Proxy
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class PSOBBPatchPacketPayloadServer : IWireMessage<PSOBBPatchPacketPayloadServer>
    {
        public virtual Type SerializableType => typeof(PSOBBPatchPacketPayloadServer);
        public virtual PSOBBPatchPacketPayloadServer Read(Span<byte> buffer, ref int offset)
        {
            PSOBBPatchPacketPayloadServer_Serializer.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public virtual void Write(PSOBBPatchPacketPayloadServer value, Span<byte> buffer, ref int offset)
        {
            PSOBBPatchPacketPayloadServer_Serializer.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="PSOBBPatchPacketPayloadServer"/>
    /// </summary>
    public sealed partial class PSOBBPatchPacketPayloadServer_Serializer
            : BasePolymorphicAutoGeneratedSerializerStrategy<PSOBBPatchPacketPayloadServer_Serializer, PSOBBPatchPacketPayloadServer, UInt16>
    {
        protected override PSOBBPatchPacketPayloadServer CreateType(int key)
        {
            switch (key)
            {
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_SEND_DONE:
                    return new PatchingDoneCommandPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_FILE_INFO:
                    return new PatchingFileCheckRequestPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_DATA_SEND:
                    return new PatchingFileChunkPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_FILE_DONE:
                    return new PatchingFileDonePayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_FILE_SEND:
                    return new PatchingFilePatchPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_INFO_FINISHED:
                    return new PatchingInfoRequestDonePayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_MESSAGE_TYPE:
                    return new PatchingMessagePayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_SEND_INFO:
                    return new PatchingPatchInfoPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_LOGIN_TYPE:
                    return new PatchingReadyForLoginRequestPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_REDIRECT_TYPE:
                    return new PatchingRedirectPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_SET_DIRECTORY:
                    return new PatchingSetDirectoryPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_START_LIST:
                    return new PatchingStartPatchPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_ONE_DIR_UP:
                    return new PatchingUpOneDirectoryCommandPayload();
                case (int)Booma.Proxy.PatchNetworkOperationCode.PATCH_WELCOME_TYPE:
                    return new PatchingWelcomePayload();
                default:
                    return new UnknownPatchPayload();
            }
        }
    }
}