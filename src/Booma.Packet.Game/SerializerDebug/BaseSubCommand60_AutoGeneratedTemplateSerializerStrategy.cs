using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using Booma.Proxy;
namespace Booma.Proxy
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class BaseSubCommand60 : IWireMessage<BaseSubCommand60>
    {
        public virtual Type SerializableType => typeof(BaseSubCommand60);
        public virtual BaseSubCommand60 Read(Span<byte> buffer, ref int offset)
        {
            BaseSubCommand60_AutoGeneratedTemplateSerializerStrategy.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public virtual void Write(BaseSubCommand60 value, Span<byte> buffer, ref int offset)
        {
            BaseSubCommand60_AutoGeneratedTemplateSerializerStrategy.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="BaseSubCommand60"/>
    /// </summary>
    public sealed partial class BaseSubCommand60_AutoGeneratedTemplateSerializerStrategy
            : BasePolymorphicAutoGeneratedSerializerStrategy<BaseSubCommand60_AutoGeneratedTemplateSerializerStrategy, BaseSubCommand60, Byte>
    {
        protected override BaseSubCommand60 CreateType(int key)
        {
            switch (key)
            {
                case (int)Booma.Proxy.SubCommand60OperationCode.GameBoxHit:
                    return new Sub60ClientBoxHitEventCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.BurstType5:
                    return new Sub60ClientBurstBeginEventCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.BeginZoneTeleporting:
                    return new Sub60ClientZoneTeleportingEventCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.CreatureDeathEvent:
                    return new Sub60CreatureDeathEventCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.DropInventoryItem:
                    return new Sub60DropInventoryItemCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.SUBCMD_LOAD_3B:
                    return new Sub60FinishedMapLoadCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.SetFinalMovingPosition:
                    return new Sub60FinishedMovingCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.AlertFreshlyWarpedClients:
                    return new Sub60FinishedWarpAckCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.EnterFreshlyWrappedZoneCommand:
                    return new Sub60FinishedWarpingBurstingCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.GameBurstingComplete:
                    return new Sub60GameBurstingCompleteEventCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.LobbyBallMove:
                    return new Sub60LobbySoccerBallMoveEventPayload();
                case (int)Booma.Proxy.SubCommand60OperationCode.MovingFastPositionChanged:
                    return new Sub60MovingFastPositionSetCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.MovingSlowPositionChanged:
                    return new Sub60MovingSlowPositionSetCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.ObjectDamageHit:
                    return new Sub60ObjectDamageRecievedCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.PickupItem:
                    return new Sub60PickupItemFromGroundCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.AttackStepOne:
                    return new Sub60PlayerAttackStepOneCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.BeginTechniqueCast:
                    return new Sub60PlayerBeginTechniqueCastCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.CastingTechiqueCast:
                    return new Sub60PlayerCastingTechniqueCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.ChangeObjectState:
                    return new Sub60PlayerChangedObjectStateCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.AttackStepFinished:
                    return new Sub60PlayerFinishedAttackStepEvent();
                case (int)Booma.Proxy.SubCommand60OperationCode.FreezePlayer:
                    return new Sub60PlayerFreezeCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.BeginObjectInteract:
                    return new Sub60PlayerInteractObjectCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.GAME_LEAVE_TYPE:
                    return new Sub60PlayerLeftGameEventCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.PhotonChairSit:
                    return new Sub60PlayerPhotonChairSitEventCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.FinishedTechniqueCast:
                    return new Sub60PlayFinishedTechniqueCastCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.SetExperienceRate:
                    return new Sub60SetExperienceRateCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.GameStartWarpToArea:
                    return new Sub60StartNewWarpCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.TeleportToPosition:
                    return new Sub60TeleportToPositionCommand();
                case (int)Booma.Proxy.SubCommand60OperationCode.WrapToNewArea:
                    return new Sub60WarpToNewAreaCommand();
                default:
                    return new UnknownSubCommand60Command();
            }
        }
    }
}