using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using Booma;
namespace Booma
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class InitializeCharacterDataEventPayload
    {
        public override Type SerializableType => typeof(InitializeCharacterDataEventPayload);
        public override PSOBBGamePacketPayloadServer Read(Span<byte> buffer, ref int offset)
        {
            InitializeCharacterDataEventPayload_Serializer.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public override void Write(PSOBBGamePacketPayloadServer value, Span<byte> buffer, ref int offset)
        {
            InitializeCharacterDataEventPayload_Serializer.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="InitializeCharacterDataEventPayload"/>
    /// </summary>
    public sealed partial class InitializeCharacterDataEventPayload_Serializer
            : BaseAutoGeneratedSerializerStrategy<InitializeCharacterDataEventPayload_Serializer, InitializeCharacterDataEventPayload>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(InitializeCharacterDataEventPayload value, Span<byte> buffer, ref int offset)
        {
            //Type: PSOBBGamePacketPayloadServer Field: 1 Name: OperationCode Type: GameNetworkOperationCode;
            value.OperationCode = GenericPrimitiveEnumTypeSerializerStrategy<GameNetworkOperationCode, Int16>.Instance.Read(buffer, ref offset);
            //Type: PSOBBGamePacketPayloadServer Field: 2 Name: Flags Type: Byte[];
            if (value.isFlagsSerialized)value.Flags = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_4>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 1 Name: Inventory Type: CharacterInventoryData;
            value.Inventory = CharacterInventoryData_Serializer.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 2 Name: CharacterData Type: LobbyCharacterData;
            value.CharacterData = LobbyCharacterData_Serializer.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 3 Name: unk1 Type: Byte[];
            value.unk1 = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_16>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 4 Name: Options Type: UInt32;
            value.Options = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 5 Name: QuestData1 Type: Byte[];
            value.QuestData1 = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_520>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 6 Name: BankData Type: CharacterBankData;
            value.BankData = CharacterBankData_Serializer.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 7 Name: GuildCard Type: GuildCardEntry;
            value.GuildCard = GuildCardEntry_Serializer.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 8 Name: unk2 Type: Int32;
            value.unk2 = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 10 Name: SymbolChat Type: Byte[];
            value.SymbolChat = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_1248>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 11 Name: Shortcuts Type: Byte[];
            value.Shortcuts = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_2624>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 12 Name: AutoReply Type: String;
            value.AutoReply = FixedSizeStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, StaticTypedNumeric_Int32_172>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 13 Name: InfoBoard Type: String;
            value.InfoBoard = FixedSizeStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, StaticTypedNumeric_Int32_172>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 14 Name: unk3 Type: Byte[];
            value.unk3 = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_28>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 14 Name: unk4 Type: Byte[];
            value.unk4 = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_44>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 15 Name: ChallengeData Type: Byte[];
            value.ChallengeData = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_320>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 15 Name: QuestData2 Type: Byte[];
            value.QuestData2 = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_88>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 16 Name: TechMenu Type: Byte[];
            value.TechMenu = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_40>.Instance.Read(buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 16 Name: OptionsConfig Type: CharacterOptionsConfiguration;
            value.OptionsConfig = CharacterOptionsConfiguration_Serializer.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(InitializeCharacterDataEventPayload value, Span<byte> buffer, ref int offset)
        {
            //Type: PSOBBGamePacketPayloadServer Field: 1 Name: OperationCode Type: GameNetworkOperationCode;
            GenericPrimitiveEnumTypeSerializerStrategy<GameNetworkOperationCode, Int16>.Instance.Write(value.OperationCode, buffer, ref offset);
            //Type: PSOBBGamePacketPayloadServer Field: 2 Name: Flags Type: Byte[];
            if (value.isFlagsSerialized)FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_4>.Instance.Write(value.Flags, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 1 Name: Inventory Type: CharacterInventoryData;
            CharacterInventoryData_Serializer.Instance.Write(value.Inventory, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 2 Name: CharacterData Type: LobbyCharacterData;
            LobbyCharacterData_Serializer.Instance.Write(value.CharacterData, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 3 Name: unk1 Type: Byte[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_16>.Instance.Write(value.unk1, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 4 Name: Options Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.Options, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 5 Name: QuestData1 Type: Byte[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_520>.Instance.Write(value.QuestData1, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 6 Name: BankData Type: CharacterBankData;
            CharacterBankData_Serializer.Instance.Write(value.BankData, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 7 Name: GuildCard Type: GuildCardEntry;
            GuildCardEntry_Serializer.Instance.Write(value.GuildCard, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 8 Name: unk2 Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.unk2, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 10 Name: SymbolChat Type: Byte[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_1248>.Instance.Write(value.SymbolChat, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 11 Name: Shortcuts Type: Byte[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_2624>.Instance.Write(value.Shortcuts, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 12 Name: AutoReply Type: String;
            FixedSizeStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, StaticTypedNumeric_Int32_172>.Instance.Write(value.AutoReply, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 13 Name: InfoBoard Type: String;
            FixedSizeStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, StaticTypedNumeric_Int32_172>.Instance.Write(value.InfoBoard, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 14 Name: unk3 Type: Byte[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_28>.Instance.Write(value.unk3, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 14 Name: unk4 Type: Byte[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_44>.Instance.Write(value.unk4, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 15 Name: ChallengeData Type: Byte[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_320>.Instance.Write(value.ChallengeData, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 15 Name: QuestData2 Type: Byte[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_88>.Instance.Write(value.QuestData2, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 16 Name: TechMenu Type: Byte[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_40>.Instance.Write(value.TechMenu, buffer, ref offset);
            //Type: InitializeCharacterDataEventPayload Field: 16 Name: OptionsConfig Type: CharacterOptionsConfiguration;
            CharacterOptionsConfiguration_Serializer.Instance.Write(value.OptionsConfig, buffer, ref offset);
        }
        private sealed class StaticTypedNumeric_Int32_16 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 16; }
        private sealed class StaticTypedNumeric_Int32_520 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 520; }
        private sealed class StaticTypedNumeric_Int32_1248 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 1248; }
        private sealed class StaticTypedNumeric_Int32_2624 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 2624; }
        private sealed class StaticTypedNumeric_Int32_172 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 172; }
        private sealed class StaticTypedNumeric_Int32_28 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 28; }
        private sealed class StaticTypedNumeric_Int32_320 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 320; }
        private sealed class StaticTypedNumeric_Int32_40 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 40; }
        private sealed class StaticTypedNumeric_Int32_44 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 44; }
        private sealed class StaticTypedNumeric_Int32_88 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 88; }
        private sealed class StaticTypedNumeric_Int32_4 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 4; }
    }
}