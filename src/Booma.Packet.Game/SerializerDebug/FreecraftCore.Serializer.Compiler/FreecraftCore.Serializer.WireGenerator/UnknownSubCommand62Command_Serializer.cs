using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using Booma;
namespace Booma
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class UnknownSubCommand62Command
    {
        public override Type SerializableType => typeof(UnknownSubCommand62Command);
        public override BaseSubCommand62 Read(Span<byte> buffer, ref int offset)
        {
            UnknownSubCommand62Command_Serializer.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public override void Write(BaseSubCommand62 value, Span<byte> buffer, ref int offset)
        {
            UnknownSubCommand62Command_Serializer.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="UnknownSubCommand62Command"/>
    /// </summary>
    public sealed partial class UnknownSubCommand62Command_Serializer
            : BaseAutoGeneratedSerializerStrategy<UnknownSubCommand62Command_Serializer, UnknownSubCommand62Command>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(UnknownSubCommand62Command value, Span<byte> buffer, ref int offset)
        {
            //Type: BaseSubCommand62 Field: 1 Name: CommandOperationCode Type: SubCommand62OperationCode;
            value.CommandOperationCode = GenericPrimitiveEnumTypeSerializerStrategy<SubCommand62OperationCode, Byte>.Instance.Read(buffer, ref offset);
            //Type: BaseSubCommand62 Field: 2 Name: CommandSize Type: Byte;
            if (value.isSizeSerialized)value.CommandSize = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: UnknownSubCommand62Command Field: 1 Name: UnknownBytes Type: Byte[];
            value.UnknownBytes = PrimitiveArrayTypeSerializerStrategy<byte>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(UnknownSubCommand62Command value, Span<byte> buffer, ref int offset)
        {
            //Type: BaseSubCommand62 Field: 1 Name: CommandOperationCode Type: SubCommand62OperationCode;
            GenericPrimitiveEnumTypeSerializerStrategy<SubCommand62OperationCode, Byte>.Instance.Write(value.CommandOperationCode, buffer, ref offset);
            //Type: BaseSubCommand62 Field: 2 Name: CommandSize Type: Byte;
            if (value.isSizeSerialized)BytePrimitiveSerializerStrategy.Instance.Write(value.CommandSize, buffer, ref offset);
            //Type: UnknownSubCommand62Command Field: 1 Name: UnknownBytes Type: Byte[];
            PrimitiveArrayTypeSerializerStrategy<byte>.Instance.Write(value.UnknownBytes, buffer, ref offset);
        }
    }
}