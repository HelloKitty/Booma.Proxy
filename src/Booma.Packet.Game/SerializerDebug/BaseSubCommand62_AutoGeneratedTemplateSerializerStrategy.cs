using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using Booma.Proxy;
namespace Booma.Proxy
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class BaseSubCommand62 : IWireMessage<BaseSubCommand62>
    {
        public virtual Type SerializableType => typeof(BaseSubCommand62);
        public virtual BaseSubCommand62 Read(Span<byte> buffer, ref int offset)
        {
            BaseSubCommand62_AutoGeneratedTemplateSerializerStrategy.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public virtual void Write(BaseSubCommand62 value, Span<byte> buffer, ref int offset)
        {
            BaseSubCommand62_AutoGeneratedTemplateSerializerStrategy.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="BaseSubCommand62"/>
    /// </summary>
    public sealed partial class BaseSubCommand62_AutoGeneratedTemplateSerializerStrategy
        : BasePolymorphicAutoGeneratedSerializerStrategy<BaseSubCommand62_AutoGeneratedTemplateSerializerStrategy, BaseSubCommand62, Byte>
    {
        protected override BaseSubCommand62 CreateType(int key)
        {
            switch (key)
            {
                case (int)Booma.Proxy.SubCommand62OperationCode.BurstType5:
                    return new Sub62ClientBurstBeginEventCommand();
                case (int)Booma.Proxy.SubCommand62OperationCode.PhotonChairCommand:
                    return new Sub62PhotonChairCommand();
                default:
                    return new UnknownSubCommand62Command();
            }
        }
    }
}